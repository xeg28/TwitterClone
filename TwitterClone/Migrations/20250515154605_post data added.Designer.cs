// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwitterClone.Data;

#nullable disable

namespace TwitterClone.Migrations
{
    [DbContext(typeof(TwitterCloneContext))]
    [Migration("20250515154605_post data added")]
    partial class postdataadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TwitterClone.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("MediaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("RepostId")
                        .HasColumnType("int");

                    b.Property<int>("Reposts")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("RepostId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Likes = 10,
                            OwnerId = 1,
                            Reposts = 2,
                            Text = "This is my first tweet."
                        },
                        new
                        {
                            Id = 2,
                            Likes = 40,
                            MediaPath = "./media/image.png",
                            OwnerId = 1,
                            Reposts = 10,
                            Text = "This is my second tweet."
                        });
                });

            modelBuilder.Entity("TwitterClone.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Followers")
                        .HasColumnType("int");

                    b.Property<int>("Following")
                        .HasColumnType("int");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "I am currently learning how to build a REST API in ASP.NET.",
                            Email = "eg2895@gmail.com",
                            Followers = 2,
                            Following = 0,
                            LegalName = "Emmanuel Gonzalez",
                            Username = "xeg28"
                        });
                });

            modelBuilder.Entity("TwitterClone.Models.Post", b =>
                {
                    b.HasOne("TwitterClone.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwitterClone.Models.Post", "Repost")
                        .WithMany()
                        .HasForeignKey("RepostId");

                    b.Navigation("Owner");

                    b.Navigation("Repost");
                });
#pragma warning restore 612, 618
        }
    }
}
